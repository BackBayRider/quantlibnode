/*
  Copyright (C) 2016 -2017 Jerry Jin
*/


var promisify = require("promisify-node");
var rawApi = require("../build/Release/quantlib");

exports.AbcdFunction = promisify(rawApi.AbcdFunction);
exports.AbcdCalibration = promisify(rawApi.AbcdCalibration);
exports.AbcdFunctionInstantaneousValue = promisify(rawApi.AbcdFunctionInstantaneousValue);
exports.AbcdFunctionInstantaneousCovariance = promisify(rawApi.AbcdFunctionInstantaneousCovariance);
exports.AbcdFunctionInstantaneousVariance = promisify(rawApi.AbcdFunctionInstantaneousVariance);
exports.AbcdFunctionInstantaneousVolatility = promisify(rawApi.AbcdFunctionInstantaneousVolatility);
exports.AbcdFunctionCovariance = promisify(rawApi.AbcdFunctionCovariance);
exports.AbcdFunctionVariance = promisify(rawApi.AbcdFunctionVariance);
exports.AbcdFunctionVolatility = promisify(rawApi.AbcdFunctionVolatility);
exports.AbcdFunctionShortTermVolatility = promisify(rawApi.AbcdFunctionShortTermVolatility);
exports.AbcdFunctionLongTermVolatility = promisify(rawApi.AbcdFunctionLongTermVolatility);
exports.AbcdFunctionMaximumLocation = promisify(rawApi.AbcdFunctionMaximumLocation);
exports.AbcdFunctionMaximumVolatility = promisify(rawApi.AbcdFunctionMaximumVolatility);
exports.AbcdFunctionA = promisify(rawApi.AbcdFunctionA);
exports.AbcdFunctionB = promisify(rawApi.AbcdFunctionB);
exports.AbcdFunctionC = promisify(rawApi.AbcdFunctionC);
exports.AbcdFunctionD = promisify(rawApi.AbcdFunctionD);
exports.AbcdDFunction = promisify(rawApi.AbcdDFunction);
exports.AbcdCalibrationCompute = promisify(rawApi.AbcdCalibrationCompute);
exports.AbcdCalibrationK = promisify(rawApi.AbcdCalibrationK);
exports.AbcdCalibrationError = promisify(rawApi.AbcdCalibrationError);
exports.AbcdCalibrationMaxError = promisify(rawApi.AbcdCalibrationMaxError);
exports.AbcdCalibrationEndCriteria = promisify(rawApi.AbcdCalibrationEndCriteria);
exports.AbcdCalibrationA = promisify(rawApi.AbcdCalibrationA);
exports.AbcdCalibrationB = promisify(rawApi.AbcdCalibrationB);
exports.AbcdCalibrationC = promisify(rawApi.AbcdCalibrationC);
exports.AbcdCalibrationD = promisify(rawApi.AbcdCalibrationD);
exports.AccountingEngine = promisify(rawApi.AccountingEngine);
exports.AccountingEngineMultiplePathValues = promisify(rawApi.AccountingEngineMultiplePathValues);
exports.AlphaFormInverseLinear = promisify(rawApi.AlphaFormInverseLinear);
exports.AlphaFormLinearHyperbolic = promisify(rawApi.AlphaFormLinearHyperbolic);
exports.AlphaFormOperator = promisify(rawApi.AlphaFormOperator);
exports.AlphaFormSetAlpha = promisify(rawApi.AlphaFormSetAlpha);
exports.AssetSwap = promisify(rawApi.AssetSwap);
exports.AssetSwap2 = promisify(rawApi.AssetSwap2);
exports.AssetSwapBondLegAnalysis = promisify(rawApi.AssetSwapBondLegAnalysis);
exports.AssetSwapFloatingLegAnalysis = promisify(rawApi.AssetSwapFloatingLegAnalysis);
exports.AssetSwapFairSpread = promisify(rawApi.AssetSwapFairSpread);
exports.AssetSwapFloatingLegBPS = promisify(rawApi.AssetSwapFloatingLegBPS);
exports.AssetSwapFairCleanPrice = promisify(rawApi.AssetSwapFairCleanPrice);
exports.AssetSwapFairNonParRepayment = promisify(rawApi.AssetSwapFairNonParRepayment);
exports.AssetSwapParSwap = promisify(rawApi.AssetSwapParSwap);
exports.AssetSwapPayBondCoupon = promisify(rawApi.AssetSwapPayBondCoupon);
exports.GaussianLHPLossmodel = promisify(rawApi.GaussianLHPLossmodel);
exports.IHGaussPoolLossModel = promisify(rawApi.IHGaussPoolLossModel);
exports.IHStudentPoolLossModel = promisify(rawApi.IHStudentPoolLossModel);
exports.GBinomialLossmodel = promisify(rawApi.GBinomialLossmodel);
exports.TBinomialLossmodel = promisify(rawApi.TBinomialLossmodel);
exports.BaseCorrelationLossModel = promisify(rawApi.BaseCorrelationLossModel);
exports.GMCLossModel = promisify(rawApi.GMCLossModel);
exports.GRandomRRMCLossModel = promisify(rawApi.GRandomRRMCLossModel);
exports.TMCLossModel = promisify(rawApi.TMCLossModel);
exports.TRandomRRMCLossModel = promisify(rawApi.TRandomRRMCLossModel);
exports.GSaddlePointLossmodel = promisify(rawApi.GSaddlePointLossmodel);
exports.TSaddlePointLossmodel = promisify(rawApi.TSaddlePointLossmodel);
exports.GRecursiveLossmodel = promisify(rawApi.GRecursiveLossmodel);
exports.FixedRateBond = promisify(rawApi.FixedRateBond);
exports.FixedRateBond2 = promisify(rawApi.FixedRateBond2);
exports.FloatingRateBond = promisify(rawApi.FloatingRateBond);
exports.CmsRateBond = promisify(rawApi.CmsRateBond);
exports.ZeroCouponBond = promisify(rawApi.ZeroCouponBond);
exports.Bond = promisify(rawApi.Bond);
exports.BondSettlementDays = promisify(rawApi.BondSettlementDays);
exports.BondCalendar = promisify(rawApi.BondCalendar);
exports.BondNotionals = promisify(rawApi.BondNotionals);
exports.BondNotional = promisify(rawApi.BondNotional);
exports.BondMaturityDate = promisify(rawApi.BondMaturityDate);
exports.BondIssueDate = promisify(rawApi.BondIssueDate);
exports.BondIsTradable = promisify(rawApi.BondIsTradable);
exports.BondSettlementDate = promisify(rawApi.BondSettlementDate);
exports.BondCleanPrice = promisify(rawApi.BondCleanPrice);
exports.BondDescription = promisify(rawApi.BondDescription);
exports.BondCurrency = promisify(rawApi.BondCurrency);
exports.BondRedemptionAmount = promisify(rawApi.BondRedemptionAmount);
exports.BondRedemptionDate = promisify(rawApi.BondRedemptionDate);
exports.BondFlowAnalysis = promisify(rawApi.BondFlowAnalysis);
exports.BondSetCouponPricer = promisify(rawApi.BondSetCouponPricer);
exports.BondSetCouponPricers = promisify(rawApi.BondSetCouponPricers);
exports.BondStartDate = promisify(rawApi.BondStartDate);
exports.BondPreviousCashFlowDate = promisify(rawApi.BondPreviousCashFlowDate);
exports.BondNextCashFlowDate = promisify(rawApi.BondNextCashFlowDate);
exports.BondPreviousCashFlowAmount = promisify(rawApi.BondPreviousCashFlowAmount);
exports.BondNextCashFlowAmount = promisify(rawApi.BondNextCashFlowAmount);
exports.BondPreviousCouponRate = promisify(rawApi.BondPreviousCouponRate);
exports.BondNextCouponRate = promisify(rawApi.BondNextCouponRate);
exports.BondAccrualStartDate = promisify(rawApi.BondAccrualStartDate);
exports.BondAccrualEndDate = promisify(rawApi.BondAccrualEndDate);
exports.BondReferencePeriodStart = promisify(rawApi.BondReferencePeriodStart);
exports.BondReferencePeriodEnd = promisify(rawApi.BondReferencePeriodEnd);
exports.BondAccrualPeriod = promisify(rawApi.BondAccrualPeriod);
exports.BondAccrualDays = promisify(rawApi.BondAccrualDays);
exports.BondAccruedPeriod = promisify(rawApi.BondAccruedPeriod);
exports.BondAccruedDays = promisify(rawApi.BondAccruedDays);
exports.BondAccruedAmount = promisify(rawApi.BondAccruedAmount);
exports.BondCleanPriceFromYieldTermStructure = promisify(rawApi.BondCleanPriceFromYieldTermStructure);
exports.BondBpsFromYieldTermStructure = promisify(rawApi.BondBpsFromYieldTermStructure);
exports.BondAtmRateFromYieldTermStructure = promisify(rawApi.BondAtmRateFromYieldTermStructure);
exports.BondCleanPriceFromYield = promisify(rawApi.BondCleanPriceFromYield);
exports.BondDirtyPriceFromYield = promisify(rawApi.BondDirtyPriceFromYield);
exports.BondBpsFromYield = promisify(rawApi.BondBpsFromYield);
exports.BondYieldFromCleanPrice = promisify(rawApi.BondYieldFromCleanPrice);
exports.BondDurationFromYield = promisify(rawApi.BondDurationFromYield);
exports.BondConvexityFromYield = promisify(rawApi.BondConvexityFromYield);
exports.BondCleanPriceFromZSpread = promisify(rawApi.BondCleanPriceFromZSpread);
exports.BondZSpreadFromCleanPrice = promisify(rawApi.BondZSpreadFromCleanPrice);
exports.BondAlive = promisify(rawApi.BondAlive);
exports.BondMaturityLookup = promisify(rawApi.BondMaturityLookup);
exports.BondMaturitySort = promisify(rawApi.BondMaturitySort);
exports.MTBrownianGeneratorFactory = promisify(rawApi.MTBrownianGeneratorFactory);
exports.CCTEU = promisify(rawApi.CCTEU);
exports.BTP = promisify(rawApi.BTP);
exports.BTP2 = promisify(rawApi.BTP2);
exports.RendistatoBasket = promisify(rawApi.RendistatoBasket);
exports.RendistatoCalculator = promisify(rawApi.RendistatoCalculator);
exports.RendistatoEquivalentSwapLengthQuote = promisify(rawApi.RendistatoEquivalentSwapLengthQuote);
exports.RendistatoEquivalentSwapSpreadQuote = promisify(rawApi.RendistatoEquivalentSwapSpreadQuote);
exports.RendistatoBasketSize = promisify(rawApi.RendistatoBasketSize);
exports.RendistatoBasketOutstanding = promisify(rawApi.RendistatoBasketOutstanding);
exports.RendistatoBasketOutstandings = promisify(rawApi.RendistatoBasketOutstandings);
exports.RendistatoBasketWeights = promisify(rawApi.RendistatoBasketWeights);
exports.RendistatoCalculatorYield = promisify(rawApi.RendistatoCalculatorYield);
exports.RendistatoCalculatorDuration = promisify(rawApi.RendistatoCalculatorDuration);
exports.RendistatoCalculatorYields = promisify(rawApi.RendistatoCalculatorYields);
exports.RendistatoCalculatorDurations = promisify(rawApi.RendistatoCalculatorDurations);
exports.RendistatoCalculatorSwapLengths = promisify(rawApi.RendistatoCalculatorSwapLengths);
exports.RendistatoCalculatorSwapRates = promisify(rawApi.RendistatoCalculatorSwapRates);
exports.RendistatoCalculatorSwapYields = promisify(rawApi.RendistatoCalculatorSwapYields);
exports.RendistatoCalculatorSwapDurations = promisify(rawApi.RendistatoCalculatorSwapDurations);
exports.RendistatoCalculatorEquivalentSwapRate = promisify(rawApi.RendistatoCalculatorEquivalentSwapRate);
exports.RendistatoCalculatorEquivalentSwapYield = promisify(rawApi.RendistatoCalculatorEquivalentSwapYield);
exports.RendistatoCalculatorEquivalentSwapDuration = promisify(rawApi.RendistatoCalculatorEquivalentSwapDuration);
exports.RendistatoCalculatorEquivalentSwapSpread = promisify(rawApi.RendistatoCalculatorEquivalentSwapSpread);
exports.RendistatoCalculatorEquivalentSwapLength = promisify(rawApi.RendistatoCalculatorEquivalentSwapLength);
exports.CalendarHolidayList = promisify(rawApi.CalendarHolidayList);
exports.CalendarName = promisify(rawApi.CalendarName);
exports.CalendarIsBusinessDay = promisify(rawApi.CalendarIsBusinessDay);
exports.CalendarIsHoliday = promisify(rawApi.CalendarIsHoliday);
exports.CalendarIsEndOfMonth = promisify(rawApi.CalendarIsEndOfMonth);
exports.CalendarEndOfMonth = promisify(rawApi.CalendarEndOfMonth);
exports.CalendarAddHoliday = promisify(rawApi.CalendarAddHoliday);
exports.CalendarRemoveHoliday = promisify(rawApi.CalendarRemoveHoliday);
exports.CalendarAdjust = promisify(rawApi.CalendarAdjust);
exports.CalendarAdvance = promisify(rawApi.CalendarAdvance);
exports.CalendarBusinessDaysBetween = promisify(rawApi.CalendarBusinessDaysBetween);
exports.SwaptionHelper = promisify(rawApi.SwaptionHelper);
exports.CalibrationHelperSetPricingEngine = promisify(rawApi.CalibrationHelperSetPricingEngine);
exports.CalibrationHelperImpliedVolatility = promisify(rawApi.CalibrationHelperImpliedVolatility);
exports.SwaptionHelperModelValue = promisify(rawApi.SwaptionHelperModelValue);
exports.OneFactorAffineModelCalibrate = promisify(rawApi.OneFactorAffineModelCalibrate);
exports.ModelG2Calibrate = promisify(rawApi.ModelG2Calibrate);
exports.CapFloor = promisify(rawApi.CapFloor);
exports.MakeCapFloor = promisify(rawApi.MakeCapFloor);
exports.CapFloorType = promisify(rawApi.CapFloorType);
exports.CapFloorCapRates = promisify(rawApi.CapFloorCapRates);
exports.CapFloorFloorRates = promisify(rawApi.CapFloorFloorRates);
exports.CapFloorAtmRate = promisify(rawApi.CapFloorAtmRate);
exports.CapFloorStartDate = promisify(rawApi.CapFloorStartDate);
exports.CapFloorMaturityDate = promisify(rawApi.CapFloorMaturityDate);
exports.CapFloorImpliedVolatility = promisify(rawApi.CapFloorImpliedVolatility);
exports.CapFloorLegAnalysis = promisify(rawApi.CapFloorLegAnalysis);
exports.RelinkableHandleOptionletVolatilityStructure = promisify(rawApi.RelinkableHandleOptionletVolatilityStructure);
exports.ConstantOptionletVolatility = promisify(rawApi.ConstantOptionletVolatility);
exports.SpreadedOptionletVolatility = promisify(rawApi.SpreadedOptionletVolatility);
exports.StrippedOptionletAdapter = promisify(rawApi.StrippedOptionletAdapter);
exports.StrippedOptionlet = promisify(rawApi.StrippedOptionlet);
exports.OptionletStripper1 = promisify(rawApi.OptionletStripper1);
exports.OptionletStripper2 = promisify(rawApi.OptionletStripper2);
exports.CapFloorTermVolCurve = promisify(rawApi.CapFloorTermVolCurve);
exports.CapFloorTermVolSurface = promisify(rawApi.CapFloorTermVolSurface);
exports.OptionletVTSVolatility = promisify(rawApi.OptionletVTSVolatility);
exports.OptionletVTSVolatility2 = promisify(rawApi.OptionletVTSVolatility2);
exports.OptionletVTSBlackVariance = promisify(rawApi.OptionletVTSBlackVariance);
exports.OptionletVTSBlackVariance2 = promisify(rawApi.OptionletVTSBlackVariance2);
exports.StrippedOptionletBaseStrikes = promisify(rawApi.StrippedOptionletBaseStrikes);
exports.StrippedOptionletBaseOptionletVolatilities = promisify(rawApi.StrippedOptionletBaseOptionletVolatilities);
exports.StrippedOptionletBaseOptionletFixingDates = promisify(rawApi.StrippedOptionletBaseOptionletFixingDates);
exports.StrippedOptionletBaseOptionletFixingTimes = promisify(rawApi.StrippedOptionletBaseOptionletFixingTimes);
exports.StrippedOptionletBaseAtmOptionletRates = promisify(rawApi.StrippedOptionletBaseAtmOptionletRates);
exports.StrippedOptionletBaseDayCounter = promisify(rawApi.StrippedOptionletBaseDayCounter);
exports.StrippedOptionletBaseCalendar = promisify(rawApi.StrippedOptionletBaseCalendar);
exports.StrippedOptionletBaseSettlementDays = promisify(rawApi.StrippedOptionletBaseSettlementDays);
exports.StrippedOptionletBaseBusinessDayConvention = promisify(rawApi.StrippedOptionletBaseBusinessDayConvention);
exports.OptionletStripperOptionletFixingTenors = promisify(rawApi.OptionletStripperOptionletFixingTenors);
exports.OptionletStripperOptionletPaymentDates = promisify(rawApi.OptionletStripperOptionletPaymentDates);
exports.OptionletStripperOptionletAccrualPeriods = promisify(rawApi.OptionletStripperOptionletAccrualPeriods);
exports.OptionletStripper1CapFloorPrices = promisify(rawApi.OptionletStripper1CapFloorPrices);
exports.OptionletStripper1CapFloorVolatilities = promisify(rawApi.OptionletStripper1CapFloorVolatilities);
exports.OptionletStripper1OptionletPrices = promisify(rawApi.OptionletStripper1OptionletPrices);
exports.OptionletStripper1SwitchStrike = promisify(rawApi.OptionletStripper1SwitchStrike);
exports.OptionletStripper2SpreadsVol = promisify(rawApi.OptionletStripper2SpreadsVol);
exports.OptionletStripper2AtmCapFloorPrices = promisify(rawApi.OptionletStripper2AtmCapFloorPrices);
exports.OptionletStripper2AtmCapFloorStrikes = promisify(rawApi.OptionletStripper2AtmCapFloorStrikes);
exports.CapFloorTermVTSVolatility = promisify(rawApi.CapFloorTermVTSVolatility);
exports.CapFloorTermVTSVolatility2 = promisify(rawApi.CapFloorTermVTSVolatility2);
exports.CapFloorTermVolCurveOptionTenors = promisify(rawApi.CapFloorTermVolCurveOptionTenors);
exports.CapFloorTermVolCurveOptionDates = promisify(rawApi.CapFloorTermVolCurveOptionDates);
exports.CapFloorTermVolSurfaceOptionTenors = promisify(rawApi.CapFloorTermVolSurfaceOptionTenors);
exports.CapFloorTermVolSurfaceOptionDates = promisify(rawApi.CapFloorTermVolSurfaceOptionDates);
exports.CapFloorTermVolSurfaceStrikes = promisify(rawApi.CapFloorTermVolSurfaceStrikes);
exports.CmsMarket = promisify(rawApi.CmsMarket);
exports.BrowseCmsMarket = promisify(rawApi.BrowseCmsMarket);
exports.CmsMarketCalibration = promisify(rawApi.CmsMarketCalibration);
exports.CmsMarketCalibrationCompute = promisify(rawApi.CmsMarketCalibrationCompute);
exports.CmsMarketCalibrationError = promisify(rawApi.CmsMarketCalibrationError);
exports.CmsMarketCalibrationEndCriteria = promisify(rawApi.CmsMarketCalibrationEndCriteria);
exports.CmsMarketCalibrationElapsed = promisify(rawApi.CmsMarketCalibrationElapsed);
exports.CmsMarketCalibrationSparseSabrParameters = promisify(rawApi.CmsMarketCalibrationSparseSabrParameters);
exports.CmsMarketCalibrationDenseSabrParameters = promisify(rawApi.CmsMarketCalibrationDenseSabrParameters);
exports.SimultaneousCalibrationBrowseCmsMarket = promisify(rawApi.SimultaneousCalibrationBrowseCmsMarket);
exports.MarketModelLmLinearExponentialCorrelationModel = promisify(rawApi.MarketModelLmLinearExponentialCorrelationModel);
exports.HistoricalForwardRatesAnalysis = promisify(rawApi.HistoricalForwardRatesAnalysis);
exports.HistoricalRatesAnalysis = promisify(rawApi.HistoricalRatesAnalysis);
exports.TimeHomogeneousForwardCorrelation = promisify(rawApi.TimeHomogeneousForwardCorrelation);
exports.ExponentialForwardCorrelation = promisify(rawApi.ExponentialForwardCorrelation);
exports.CotSwapFromFwdCorrelation = promisify(rawApi.CotSwapFromFwdCorrelation);
exports.HistoricalForwardRatesAnalysisSkippedDates = promisify(rawApi.HistoricalForwardRatesAnalysisSkippedDates);
exports.HistoricalForwardRatesAnalysisSkippedDatesErrorMessage = promisify(rawApi.HistoricalForwardRatesAnalysisSkippedDatesErrorMessage);
exports.HistoricalForwardRatesAnalysisFailedDates = promisify(rawApi.HistoricalForwardRatesAnalysisFailedDates);
exports.HistoricalForwardRatesAnalysisFailedDatesErrorMessage = promisify(rawApi.HistoricalForwardRatesAnalysisFailedDatesErrorMessage);
exports.HistoricalForwardRatesAnalysisFixingPeriods = promisify(rawApi.HistoricalForwardRatesAnalysisFixingPeriods);
exports.HistoricalRatesAnalysisSkippedDates = promisify(rawApi.HistoricalRatesAnalysisSkippedDates);
exports.HistoricalRatesAnalysisSkippedDatesErrorMessage = promisify(rawApi.HistoricalRatesAnalysisSkippedDatesErrorMessage);
exports.PiecewiseConstantCorrelationCorrelation = promisify(rawApi.PiecewiseConstantCorrelationCorrelation);
exports.PiecewiseConstantCorrelationTimes = promisify(rawApi.PiecewiseConstantCorrelationTimes);
exports.PiecewiseConstantCorrelationNumberOfRates = promisify(rawApi.PiecewiseConstantCorrelationNumberOfRates);
exports.ExponentialCorrelations = promisify(rawApi.ExponentialCorrelations);
exports.FixedRateLeg = promisify(rawApi.FixedRateLeg);
exports.FixedRateLeg2 = promisify(rawApi.FixedRateLeg2);
exports.IborLeg = promisify(rawApi.IborLeg);
exports.DigitalIborLeg = promisify(rawApi.DigitalIborLeg);
exports.CmsLeg = promisify(rawApi.CmsLeg);
exports.DigitalCmsLeg = promisify(rawApi.DigitalCmsLeg);
exports.RangeAccrualLeg = promisify(rawApi.RangeAccrualLeg);
exports.CmsZeroLeg = promisify(rawApi.CmsZeroLeg);
exports.IborCouponPricer = promisify(rawApi.IborCouponPricer);
exports.CmsCouponPricer = promisify(rawApi.CmsCouponPricer);
exports.ConundrumPricerByNumericalIntegration = promisify(rawApi.ConundrumPricerByNumericalIntegration);
exports.DigitalReplication = promisify(rawApi.DigitalReplication);
exports.ConundrumPricerByNumericalIntegrationUpperLimit = promisify(rawApi.ConundrumPricerByNumericalIntegrationUpperLimit);
exports.CreditDefaultSwap = promisify(rawApi.CreditDefaultSwap);
exports.MidPointCdsEngine = promisify(rawApi.MidPointCdsEngine);
exports.HazardRateCurve = promisify(rawApi.HazardRateCurve);
exports.SpreadCdsHelper = promisify(rawApi.SpreadCdsHelper);
exports.UpfrontCdsHelper = promisify(rawApi.UpfrontCdsHelper);
exports.PiecewiseHazardRateCurve = promisify(rawApi.PiecewiseHazardRateCurve);
exports.PiecewiseFlatForwardCurve = promisify(rawApi.PiecewiseFlatForwardCurve);
exports.RiskyFixedBond = promisify(rawApi.RiskyFixedBond);
exports.Issuer = promisify(rawApi.Issuer);
exports.DefaultEvent = promisify(rawApi.DefaultEvent);
exports.SyntheticCDO = promisify(rawApi.SyntheticCDO);
exports.MidPointCDOEngine = promisify(rawApi.MidPointCDOEngine);
exports.NthToDefault = promisify(rawApi.NthToDefault);
exports.IntegralNtdEngine = promisify(rawApi.IntegralNtdEngine);
exports.BlackCdsOptionEngine = promisify(rawApi.BlackCdsOptionEngine);
exports.CDSOption = promisify(rawApi.CDSOption);
exports.BaseCorrelationTermStructure = promisify(rawApi.BaseCorrelationTermStructure);
exports.CdsCouponLegNPV = promisify(rawApi.CdsCouponLegNPV);
exports.CdsDefaultLegNPV = promisify(rawApi.CdsDefaultLegNPV);
exports.CdsFairSpread = promisify(rawApi.CdsFairSpread);
exports.CdsFairUpfront = promisify(rawApi.CdsFairUpfront);
exports.HRDates = promisify(rawApi.HRDates);
exports.HRates = promisify(rawApi.HRates);
exports.CdsOptionImpliedVol = promisify(rawApi.CdsOptionImpliedVol);
exports.BaseCorrelationValue = promisify(rawApi.BaseCorrelationValue);
exports.CTSMMCapletOriginalCalibration = promisify(rawApi.CTSMMCapletOriginalCalibration);
exports.CTSMMCapletAlphaFormCalibration = promisify(rawApi.CTSMMCapletAlphaFormCalibration);
exports.CTSMMCapletMaxHomogeneityCalibration = promisify(rawApi.CTSMMCapletMaxHomogeneityCalibration);
exports.CTSMMCapletCalibrationCalibrate = promisify(rawApi.CTSMMCapletCalibrationCalibrate);
exports.CTSMMCapletCalibrationFailures = promisify(rawApi.CTSMMCapletCalibrationFailures);
exports.CTSMMCapletCalibrationDeformationSize = promisify(rawApi.CTSMMCapletCalibrationDeformationSize);
exports.CTSMMCapletCalibrationMarketCapletVols = promisify(rawApi.CTSMMCapletCalibrationMarketCapletVols);
exports.CTSMMCapletCalibrationModelCapletVols = promisify(rawApi.CTSMMCapletCalibrationModelCapletVols);
exports.CTSMMCapletCalibrationCapletRmsError = promisify(rawApi.CTSMMCapletCalibrationCapletRmsError);
exports.CTSMMCapletCalibrationCapletMaxError = promisify(rawApi.CTSMMCapletCalibrationCapletMaxError);
exports.CTSMMCapletCalibrationMarketSwaptionVols = promisify(rawApi.CTSMMCapletCalibrationMarketSwaptionVols);
exports.CTSMMCapletCalibrationModelSwaptionVols = promisify(rawApi.CTSMMCapletCalibrationModelSwaptionVols);
exports.CTSMMCapletCalibrationSwaptionRmsError = promisify(rawApi.CTSMMCapletCalibrationSwaptionRmsError);
exports.CTSMMCapletCalibrationSwaptionMaxError = promisify(rawApi.CTSMMCapletCalibrationSwaptionMaxError);
exports.CTSMMCapletCalibrationSwapPseudoRoot = promisify(rawApi.CTSMMCapletCalibrationSwapPseudoRoot);
exports.CTSMMCapletCalibrationTimeDependentCalibratedSwaptionVols = promisify(rawApi.CTSMMCapletCalibrationTimeDependentCalibratedSwaptionVols);
exports.CTSMMCapletCalibrationTimeDependentUnCalibratedSwaptionVols = promisify(rawApi.CTSMMCapletCalibrationTimeDependentUnCalibratedSwaptionVols);
exports.CTSMMCapletAlphaFormCalibrationAlpha = promisify(rawApi.CTSMMCapletAlphaFormCalibrationAlpha);
exports.CMSwapCurveState = promisify(rawApi.CMSwapCurveState);
exports.CoterminalSwapCurveState = promisify(rawApi.CoterminalSwapCurveState);
exports.LMMCurveState = promisify(rawApi.LMMCurveState);
exports.CurveStateRateTimes = promisify(rawApi.CurveStateRateTimes);
exports.CurveStateRateTaus = promisify(rawApi.CurveStateRateTaus);
exports.CurveStateForwardRates = promisify(rawApi.CurveStateForwardRates);
exports.CurveStateCoterminalSwapRates = promisify(rawApi.CurveStateCoterminalSwapRates);
exports.CurveStateCMSwapRates = promisify(rawApi.CurveStateCMSwapRates);
exports.CMSwapCurveStateSetOnCMSwapRates = promisify(rawApi.CMSwapCurveStateSetOnCMSwapRates);
exports.CoterminalSwapCurveStateSetOnCoterminalSwapRates = promisify(rawApi.CoterminalSwapCurveStateSetOnCoterminalSwapRates);
exports.LMMCurveStateSetOnForwardRates = promisify(rawApi.LMMCurveStateSetOnForwardRates);
exports.LMMCurveStateSetOnDiscountRatios = promisify(rawApi.LMMCurveStateSetOnDiscountRatios);
exports.ForwardsFromDiscountRatios = promisify(rawApi.ForwardsFromDiscountRatios);
exports.CoterminalSwapRatesFromDiscountRatios = promisify(rawApi.CoterminalSwapRatesFromDiscountRatios);
exports.CoterminalSwapAnnuitiesFromDiscountRatios = promisify(rawApi.CoterminalSwapAnnuitiesFromDiscountRatios);
exports.ConstantMaturitySwapRatesFromDiscountRatios = promisify(rawApi.ConstantMaturitySwapRatesFromDiscountRatios);
exports.ConstantMaturitySwapAnnuitiesFromDiscountRatios = promisify(rawApi.ConstantMaturitySwapAnnuitiesFromDiscountRatios);
exports.PeriodFromFrequency = promisify(rawApi.PeriodFromFrequency);
exports.FrequencyFromPeriod = promisify(rawApi.FrequencyFromPeriod);
exports.PeriodLessThan = promisify(rawApi.PeriodLessThan);
exports.PeriodEquivalent = promisify(rawApi.PeriodEquivalent);
exports.DateMinDate = promisify(rawApi.DateMinDate);
exports.DateMaxDate = promisify(rawApi.DateMaxDate);
exports.DateIsLeap = promisify(rawApi.DateIsLeap);
exports.DateEndOfMonth = promisify(rawApi.DateEndOfMonth);
exports.DateIsEndOfMonth = promisify(rawApi.DateIsEndOfMonth);
exports.DateNextWeekday = promisify(rawApi.DateNextWeekday);
exports.DateNthWeekday = promisify(rawApi.DateNthWeekday);
exports.IMMIsIMMdate = promisify(rawApi.IMMIsIMMdate);
exports.IMMIsIMMcode = promisify(rawApi.IMMIsIMMcode);
exports.IMMcode = promisify(rawApi.IMMcode);
exports.IMMNextCode = promisify(rawApi.IMMNextCode);
exports.IMMNextCodes = promisify(rawApi.IMMNextCodes);
exports.IMMdate = promisify(rawApi.IMMdate);
exports.IMMNextDate = promisify(rawApi.IMMNextDate);
exports.IMMNextDates = promisify(rawApi.IMMNextDates);
exports.ASXIsASXdate = promisify(rawApi.ASXIsASXdate);
exports.ASXIsASXcode = promisify(rawApi.ASXIsASXcode);
exports.ASXcode = promisify(rawApi.ASXcode);
exports.ASXNextCode = promisify(rawApi.ASXNextCode);
exports.ASXNextCodes = promisify(rawApi.ASXNextCodes);
exports.ASXdate = promisify(rawApi.ASXdate);
exports.ASXNextDate = promisify(rawApi.ASXNextDate);
exports.ASXNextDates = promisify(rawApi.ASXNextDates);
exports.ECBKnownDates = promisify(rawApi.ECBKnownDates);
exports.ECBAddDate = promisify(rawApi.ECBAddDate);
exports.ECBRemoveDate = promisify(rawApi.ECBRemoveDate);
exports.ECBdate2 = promisify(rawApi.ECBdate2);
exports.ECBdate = promisify(rawApi.ECBdate);
exports.ECBcode = promisify(rawApi.ECBcode);
exports.ECBNextDate = promisify(rawApi.ECBNextDate);
exports.ECBNextDate2 = promisify(rawApi.ECBNextDate2);
exports.ECBNextDates = promisify(rawApi.ECBNextDates);
exports.ECBIsECBdate = promisify(rawApi.ECBIsECBdate);
exports.ECBIsECBcode = promisify(rawApi.ECBIsECBcode);
exports.ECBNextCode = promisify(rawApi.ECBNextCode);
exports.ECBNextCode2 = promisify(rawApi.ECBNextCode2);
exports.DayCounterName = promisify(rawApi.DayCounterName);
exports.DayCounterDayCount = promisify(rawApi.DayCounterDayCount);
exports.DayCounterYearFraction = promisify(rawApi.DayCounterYearFraction);
exports.CreditBasket = promisify(rawApi.CreditBasket);
exports.CreditBasketSetLossModel = promisify(rawApi.CreditBasketSetLossModel);
exports.CreditBasketSize = promisify(rawApi.CreditBasketSize);
exports.CreditBasketLiveNotional = promisify(rawApi.CreditBasketLiveNotional);
exports.CreditBasketLoss = promisify(rawApi.CreditBasketLoss);
exports.CreditBasketAttachLive = promisify(rawApi.CreditBasketAttachLive);
exports.CreditBasketDetachLive = promisify(rawApi.CreditBasketDetachLive);
exports.ExpectedTrancheLoss = promisify(rawApi.ExpectedTrancheLoss);
exports.CreditBasketPercentile = promisify(rawApi.CreditBasketPercentile);
exports.CreditBasketESF = promisify(rawApi.CreditBasketESF);
exports.CreditBasketNthEventP = promisify(rawApi.CreditBasketNthEventP);
exports.CreditBasketProbLoss = promisify(rawApi.CreditBasketProbLoss);
exports.CreditBasketSplitLoss = promisify(rawApi.CreditBasketSplitLoss);
exports.CreditBasketDefaulCorrel = promisify(rawApi.CreditBasketDefaulCorrel);
exports.RelinkableHandleDefaultProbabilityTermStructure = promisify(rawApi.RelinkableHandleDefaultProbabilityTermStructure);
exports.FlatHazardRate = promisify(rawApi.FlatHazardRate);
exports.DefaultTSDefaultProbability = promisify(rawApi.DefaultTSDefaultProbability);
exports.ProbabilityToHR = promisify(rawApi.ProbabilityToHR);
exports.LMMDriftCalculator = promisify(rawApi.LMMDriftCalculator);
exports.LMMNormalDriftCalculator = promisify(rawApi.LMMNormalDriftCalculator);
exports.CMSMMDriftCalculator = promisify(rawApi.CMSMMDriftCalculator);
exports.SMMDriftCalculator = promisify(rawApi.SMMDriftCalculator);
exports.LMMDriftCalculatorComputePlain = promisify(rawApi.LMMDriftCalculatorComputePlain);
exports.LMMDriftCalculatorComputeReduced = promisify(rawApi.LMMDriftCalculatorComputeReduced);
exports.LMMDriftCalculatorCompute = promisify(rawApi.LMMDriftCalculatorCompute);
exports.LMMNormalDriftCalculatorComputePlain = promisify(rawApi.LMMNormalDriftCalculatorComputePlain);
exports.LMMNormalDriftCalculatorComputeReduced = promisify(rawApi.LMMNormalDriftCalculatorComputeReduced);
exports.LMMNormalDriftCalculatorCompute = promisify(rawApi.LMMNormalDriftCalculatorCompute);
exports.CMSMMDriftCalculatorCompute = promisify(rawApi.CMSMMDriftCalculatorCompute);
exports.SMMDriftCalculatorCompute = promisify(rawApi.SMMDriftCalculatorCompute);
exports.EvolutionDescription = promisify(rawApi.EvolutionDescription);
exports.EvolutionDescriptionFromProduct = promisify(rawApi.EvolutionDescriptionFromProduct);
exports.EvolutionDescriptionRateTimes = promisify(rawApi.EvolutionDescriptionRateTimes);
exports.EvolutionDescriptionRateTaus = promisify(rawApi.EvolutionDescriptionRateTaus);
exports.EvolutionDescriptionEvolutionTimes = promisify(rawApi.EvolutionDescriptionEvolutionTimes);
exports.EvolutionDescriptionFirstAliveRate = promisify(rawApi.EvolutionDescriptionFirstAliveRate);
exports.EvolutionDescriptionNumberOfRates = promisify(rawApi.EvolutionDescriptionNumberOfRates);
exports.EvolutionDescriptionNumberOfSteps = promisify(rawApi.EvolutionDescriptionNumberOfSteps);
exports.TerminalMeasure = promisify(rawApi.TerminalMeasure);
exports.MoneyMarketMeasure = promisify(rawApi.MoneyMarketMeasure);
exports.MoneyMarketPlusMeasure = promisify(rawApi.MoneyMarketPlusMeasure);
exports.IsInTerminalMeasure = promisify(rawApi.IsInTerminalMeasure);
exports.IsInMoneyMarketMeasure = promisify(rawApi.IsInMoneyMarketMeasure);
exports.IsInMoneyMarketPlusMeasure = promisify(rawApi.IsInMoneyMarketPlusMeasure);
exports.AmericanExercise = promisify(rawApi.AmericanExercise);
exports.EuropeanExercise = promisify(rawApi.EuropeanExercise);
exports.BermudanExercise = promisify(rawApi.BermudanExercise);
exports.ExerciseDates = promisify(rawApi.ExerciseDates);
exports.ExerciseLastDate = promisify(rawApi.ExerciseLastDate);
exports.FRA = promisify(rawApi.FRA);
exports.FRAforwardRate = promisify(rawApi.FRAforwardRate);
exports.FRAforwardValue = promisify(rawApi.FRAforwardValue);
exports.FRAspotValue = promisify(rawApi.FRAspotValue);
exports.HandleCurrentLink = promisify(rawApi.HandleCurrentLink);
exports.HandleEmpty = promisify(rawApi.HandleEmpty);
exports.RelinkableHandleLinkTo = promisify(rawApi.RelinkableHandleLinkTo);
exports.IborIndex = promisify(rawApi.IborIndex);
exports.OvernightIndex = promisify(rawApi.OvernightIndex);
exports.Euribor = promisify(rawApi.Euribor);
exports.Euribor365 = promisify(rawApi.Euribor365);
exports.Eonia = promisify(rawApi.Eonia);
exports.Libor = promisify(rawApi.Libor);
exports.Sonia = promisify(rawApi.Sonia);
exports.SwapIndex = promisify(rawApi.SwapIndex);
exports.EuriborSwap = promisify(rawApi.EuriborSwap);
exports.LiborSwap = promisify(rawApi.LiborSwap);
exports.EuriborSwapIsdaFixA = promisify(rawApi.EuriborSwapIsdaFixA);
exports.BMAIndex = promisify(rawApi.BMAIndex);
exports.ProxyIbor = promisify(rawApi.ProxyIbor);
exports.IndexName = promisify(rawApi.IndexName);
exports.IndexFixingCalendar = promisify(rawApi.IndexFixingCalendar);
exports.IndexIsValidFixingDate = promisify(rawApi.IndexIsValidFixingDate);
exports.IndexFixing = promisify(rawApi.IndexFixing);
exports.IndexAddFixings = promisify(rawApi.IndexAddFixings);
exports.IndexAddFixings2 = promisify(rawApi.IndexAddFixings2);
exports.IndexClearFixings = promisify(rawApi.IndexClearFixings);
exports.InterestRateIndexFamilyName = promisify(rawApi.InterestRateIndexFamilyName);
exports.InterestRateIndexTenor = promisify(rawApi.InterestRateIndexTenor);
exports.InterestRateIndexFixingDays = promisify(rawApi.InterestRateIndexFixingDays);
exports.InterestRateIndexCurrency = promisify(rawApi.InterestRateIndexCurrency);
exports.InterestRateIndexDayCounter = promisify(rawApi.InterestRateIndexDayCounter);
exports.InterestRateIndexValueDate = promisify(rawApi.InterestRateIndexValueDate);
exports.InterestRateIndexFixingDate = promisify(rawApi.InterestRateIndexFixingDate);
exports.InterestRateIndexMaturity = promisify(rawApi.InterestRateIndexMaturity);
exports.IborIndexBusinessDayConv = promisify(rawApi.IborIndexBusinessDayConv);
exports.IborIndexEndOfMonth = promisify(rawApi.IborIndexEndOfMonth);
exports.SwapIndexFixedLegTenor = promisify(rawApi.SwapIndexFixedLegTenor);
exports.SwapIndexFixedLegBDC = promisify(rawApi.SwapIndexFixedLegBDC);
exports.InstrumentNPV = promisify(rawApi.InstrumentNPV);
exports.InstrumentErrorEstimate = promisify(rawApi.InstrumentErrorEstimate);
exports.InstrumentValuationDate = promisify(rawApi.InstrumentValuationDate);
exports.InstrumentResults = promisify(rawApi.InstrumentResults);
exports.InstrumentIsExpired = promisify(rawApi.InstrumentIsExpired);
exports.InstrumentSetPricingEngine = promisify(rawApi.InstrumentSetPricingEngine);
exports.Interpolation = promisify(rawApi.Interpolation);
exports.MixedLinearCubicInterpolation = promisify(rawApi.MixedLinearCubicInterpolation);
exports.CubicInterpolation = promisify(rawApi.CubicInterpolation);
exports.AbcdInterpolation = promisify(rawApi.AbcdInterpolation);
exports.SABRInterpolation = promisify(rawApi.SABRInterpolation);
exports.Interpolation2D = promisify(rawApi.Interpolation2D);
exports.ExtrapolatorEnableExtrapolation = promisify(rawApi.ExtrapolatorEnableExtrapolation);
exports.InterpolationInterpolate = promisify(rawApi.InterpolationInterpolate);
exports.InterpolationDerivative = promisify(rawApi.InterpolationDerivative);
exports.InterpolationSecondDerivative = promisify(rawApi.InterpolationSecondDerivative);
exports.InterpolationPrimitive = promisify(rawApi.InterpolationPrimitive);
exports.InterpolationIsInRange = promisify(rawApi.InterpolationIsInRange);
exports.InterpolationXmin = promisify(rawApi.InterpolationXmin);
exports.InterpolationXmax = promisify(rawApi.InterpolationXmax);
exports.CubicInterpolationPrimitiveConstants = promisify(rawApi.CubicInterpolationPrimitiveConstants);
exports.CubicInterpolationACoefficients = promisify(rawApi.CubicInterpolationACoefficients);
exports.CubicInterpolationBCoefficients = promisify(rawApi.CubicInterpolationBCoefficients);
exports.CubicInterpolationCCoefficients = promisify(rawApi.CubicInterpolationCCoefficients);
exports.CubicInterpolationMonotonicityAdjustments = promisify(rawApi.CubicInterpolationMonotonicityAdjustments);
exports.AbcdInterpolationA = promisify(rawApi.AbcdInterpolationA);
exports.AbcdInterpolationB = promisify(rawApi.AbcdInterpolationB);
exports.AbcdInterpolationC = promisify(rawApi.AbcdInterpolationC);
exports.AbcdInterpolationD = promisify(rawApi.AbcdInterpolationD);
exports.AbcdInterpolationRmsError = promisify(rawApi.AbcdInterpolationRmsError);
exports.AbcdInterpolationMaxError = promisify(rawApi.AbcdInterpolationMaxError);
exports.AbcdInterpolationEndCriteria = promisify(rawApi.AbcdInterpolationEndCriteria);
exports.SABRInterpolationExpiry = promisify(rawApi.SABRInterpolationExpiry);
exports.SABRInterpolationForward = promisify(rawApi.SABRInterpolationForward);
exports.SABRInterpolationAlpha = promisify(rawApi.SABRInterpolationAlpha);
exports.SABRInterpolationBeta = promisify(rawApi.SABRInterpolationBeta);
exports.SABRInterpolationNu = promisify(rawApi.SABRInterpolationNu);
exports.SABRInterpolationRho = promisify(rawApi.SABRInterpolationRho);
exports.SABRInterpolationRmsError = promisify(rawApi.SABRInterpolationRmsError);
exports.SABRInterpolationMaxError = promisify(rawApi.SABRInterpolationMaxError);
exports.SABRInterpolationEndCriteria = promisify(rawApi.SABRInterpolationEndCriteria);
exports.SABRInterpolationWeights = promisify(rawApi.SABRInterpolationWeights);
exports.Interpolation2DXmin = promisify(rawApi.Interpolation2DXmin);
exports.Interpolation2DXmax = promisify(rawApi.Interpolation2DXmax);
exports.Interpolation2DXvalues = promisify(rawApi.Interpolation2DXvalues);
exports.Interpolation2DYmin = promisify(rawApi.Interpolation2DYmin);
exports.Interpolation2DYmax = promisify(rawApi.Interpolation2DYmax);
exports.Interpolation2DYvalues = promisify(rawApi.Interpolation2DYvalues);
exports.Interpolation2DzData = promisify(rawApi.Interpolation2DzData);
exports.Interpolation2DIsInRange = promisify(rawApi.Interpolation2DIsInRange);
exports.Interpolation2DInterpolate = promisify(rawApi.Interpolation2DInterpolate);
exports.GaussianDefaultProbLM = promisify(rawApi.GaussianDefaultProbLM);
exports.TDefaultProbLM = promisify(rawApi.TDefaultProbLM);
exports.GaussianLMDefaultCorrel = promisify(rawApi.GaussianLMDefaultCorrel);
exports.GaussianLMAssetCorrel = promisify(rawApi.GaussianLMAssetCorrel);
exports.GaussianLMProbNHits = promisify(rawApi.GaussianLMProbNHits);
exports.TLMDefaultCorrel = promisify(rawApi.TLMDefaultCorrel);
exports.TLMAssetCorrel = promisify(rawApi.TLMAssetCorrel);
exports.TLMProbNHits = promisify(rawApi.TLMProbNHits);
exports.Leg = promisify(rawApi.Leg);
exports.LegFromCapFloor = promisify(rawApi.LegFromCapFloor);
exports.LegFromSwap = promisify(rawApi.LegFromSwap);
exports.MultiPhaseLeg = promisify(rawApi.MultiPhaseLeg);
exports.InterestRate = promisify(rawApi.InterestRate);
exports.LegFlowAnalysis = promisify(rawApi.LegFlowAnalysis);
exports.LegSetCouponPricers = promisify(rawApi.LegSetCouponPricers);
exports.InterestRateRate = promisify(rawApi.InterestRateRate);
exports.InterestRateDayCounter = promisify(rawApi.InterestRateDayCounter);
exports.InterestRateCompounding = promisify(rawApi.InterestRateCompounding);
exports.InterestRateFrequency = promisify(rawApi.InterestRateFrequency);
exports.InterestRateDiscountFactor = promisify(rawApi.InterestRateDiscountFactor);
exports.InterestRateCompoundFactor = promisify(rawApi.InterestRateCompoundFactor);
exports.InterestRateEquivalentRate = promisify(rawApi.InterestRateEquivalentRate);
exports.LegStartDate = promisify(rawApi.LegStartDate);
exports.LegMaturityDate = promisify(rawApi.LegMaturityDate);
exports.LegIsExpired = promisify(rawApi.LegIsExpired);
exports.LegPreviousCashFlowDate = promisify(rawApi.LegPreviousCashFlowDate);
exports.LegNextCashFlowDate = promisify(rawApi.LegNextCashFlowDate);
exports.LegPreviousCashFlowAmount = promisify(rawApi.LegPreviousCashFlowAmount);
exports.LegNextCashFlowAmount = promisify(rawApi.LegNextCashFlowAmount);
exports.LegPreviousCouponRate = promisify(rawApi.LegPreviousCouponRate);
exports.LegNextCouponRate = promisify(rawApi.LegNextCouponRate);
exports.LegNominal = promisify(rawApi.LegNominal);
exports.LegAccrualStartDate = promisify(rawApi.LegAccrualStartDate);
exports.LegAccrualEndDate = promisify(rawApi.LegAccrualEndDate);
exports.LegReferencePeriodStart = promisify(rawApi.LegReferencePeriodStart);
exports.LegReferencePeriodEnd = promisify(rawApi.LegReferencePeriodEnd);
exports.LegAccrualPeriod = promisify(rawApi.LegAccrualPeriod);
exports.LegAccrualDays = promisify(rawApi.LegAccrualDays);
exports.LegAccruedPeriod = promisify(rawApi.LegAccruedPeriod);
exports.LegAccruedDays = promisify(rawApi.LegAccruedDays);
exports.LegAccruedAmount = promisify(rawApi.LegAccruedAmount);
exports.LegNPV = promisify(rawApi.LegNPV);
exports.LegBPS = promisify(rawApi.LegBPS);
exports.LegAtmRate = promisify(rawApi.LegAtmRate);
exports.LegNPVFromYield = promisify(rawApi.LegNPVFromYield);
exports.LegBPSFromYield = promisify(rawApi.LegBPSFromYield);
exports.LegYield = promisify(rawApi.LegYield);
exports.LegDuration = promisify(rawApi.LegDuration);
exports.LegConvexity = promisify(rawApi.LegConvexity);
exports.LegBasisPointValue = promisify(rawApi.LegBasisPointValue);
exports.LegYieldValueBasisPoint = promisify(rawApi.LegYieldValueBasisPoint);
exports.LegNPVFromZSpread = promisify(rawApi.LegNPVFromZSpread);
exports.LegZSpread = promisify(rawApi.LegZSpread);
exports.InterestRateImpliedRate = promisify(rawApi.InterestRateImpliedRate);
exports.ForwardRatePc = promisify(rawApi.ForwardRatePc);
exports.ForwardRateIpc = promisify(rawApi.ForwardRateIpc);
exports.ForwardRateNormalPc = promisify(rawApi.ForwardRateNormalPc);
exports.MarketModelEvolverStartNewPath = promisify(rawApi.MarketModelEvolverStartNewPath);
exports.MarketModelEvolverAdvanceStep = promisify(rawApi.MarketModelEvolverAdvanceStep);
exports.MarketModelEvolverCurrentStep = promisify(rawApi.MarketModelEvolverCurrentStep);
exports.MarketModelEvolverNumeraires = promisify(rawApi.MarketModelEvolverNumeraires);
exports.FlatVol = promisify(rawApi.FlatVol);
exports.AbcdVol = promisify(rawApi.AbcdVol);
exports.PseudoRootFacade = promisify(rawApi.PseudoRootFacade);
exports.CotSwapToFwdAdapter = promisify(rawApi.CotSwapToFwdAdapter);
exports.FwdPeriodAdapter = promisify(rawApi.FwdPeriodAdapter);
exports.FwdToCotSwapAdapter = promisify(rawApi.FwdToCotSwapAdapter);
exports.FlatVolFactory = promisify(rawApi.FlatVolFactory);
exports.MarketModelInitialRates = promisify(rawApi.MarketModelInitialRates);
exports.MarketModelDisplacements = promisify(rawApi.MarketModelDisplacements);
exports.MarketModelNumberOfRates = promisify(rawApi.MarketModelNumberOfRates);
exports.MarketModelNumberOfFactors = promisify(rawApi.MarketModelNumberOfFactors);
exports.MarketModelNumberOfSteps = promisify(rawApi.MarketModelNumberOfSteps);
exports.MarketModelPseudoRoot = promisify(rawApi.MarketModelPseudoRoot);
exports.MarketModelCovariance = promisify(rawApi.MarketModelCovariance);
exports.MarketModelTotalCovariance = promisify(rawApi.MarketModelTotalCovariance);
exports.MarketModelTimeDependentVolatility = promisify(rawApi.MarketModelTimeDependentVolatility);
exports.CoterminalSwapForwardJacobian = promisify(rawApi.CoterminalSwapForwardJacobian);
exports.CoterminalSwapZedMatrix = promisify(rawApi.CoterminalSwapZedMatrix);
exports.CoinitialSwapForwardJacobian = promisify(rawApi.CoinitialSwapForwardJacobian);
exports.CoinitialSwapZedMatrix = promisify(rawApi.CoinitialSwapZedMatrix);
exports.CmSwapForwardJacobian = promisify(rawApi.CmSwapForwardJacobian);
exports.CmSwapZedMatrix = promisify(rawApi.CmSwapZedMatrix);
exports.Annuity = promisify(rawApi.Annuity);
exports.SwapDerivative = promisify(rawApi.SwapDerivative);
exports.RateVolDifferences = promisify(rawApi.RateVolDifferences);
exports.RateInstVolDifferences = promisify(rawApi.RateInstVolDifferences);
exports.SymmetricSchurDecomposition = promisify(rawApi.SymmetricSchurDecomposition);
exports.CovarianceDecomposition = promisify(rawApi.CovarianceDecomposition);
exports.SymmetricSchurDecompositionEigenvalues = promisify(rawApi.SymmetricSchurDecompositionEigenvalues);
exports.SymmetricSchurDecompositionEigenvectors = promisify(rawApi.SymmetricSchurDecompositionEigenvectors);
exports.CovarianceDecompositionVariances = promisify(rawApi.CovarianceDecompositionVariances);
exports.CovarianceDecompositionStandardDeviations = promisify(rawApi.CovarianceDecompositionStandardDeviations);
exports.CovarianceDecompositionCorrelationMatrix = promisify(rawApi.CovarianceDecompositionCorrelationMatrix);
exports.PrimeNumber = promisify(rawApi.PrimeNumber);
exports.NormDist = promisify(rawApi.NormDist);
exports.NormSDist = promisify(rawApi.NormSDist);
exports.NormInv = promisify(rawApi.NormInv);
exports.NormSInv = promisify(rawApi.NormSInv);
exports.CholeskyDecomposition = promisify(rawApi.CholeskyDecomposition);
exports.PseudoSqrt = promisify(rawApi.PseudoSqrt);
exports.RankReducedSqrt = promisify(rawApi.RankReducedSqrt);
exports.GetCovariance = promisify(rawApi.GetCovariance);
exports.EndCriteria = promisify(rawApi.EndCriteria);
exports.NoConstraint = promisify(rawApi.NoConstraint);
exports.Simplex = promisify(rawApi.Simplex);
exports.LevenbergMarquardt = promisify(rawApi.LevenbergMarquardt);
exports.ConjugateGradient = promisify(rawApi.ConjugateGradient);
exports.SteepestDescent = promisify(rawApi.SteepestDescent);
exports.ArmijoLineSearch = promisify(rawApi.ArmijoLineSearch);
exports.EndCriteriaMaxIterations = promisify(rawApi.EndCriteriaMaxIterations);
exports.EndCriteriaMaxStationaryStateIterations = promisify(rawApi.EndCriteriaMaxStationaryStateIterations);
exports.EndCriteriaFunctionEpsilon = promisify(rawApi.EndCriteriaFunctionEpsilon);
exports.EndCriteriaGradientNormEpsilon = promisify(rawApi.EndCriteriaGradientNormEpsilon);
exports.SphereCylinderOptimizerClosest = promisify(rawApi.SphereCylinderOptimizerClosest);
exports.SecondsToString = promisify(rawApi.SecondsToString);
exports.BarrierOption = promisify(rawApi.BarrierOption);
exports.CaAsianOption = promisify(rawApi.CaAsianOption);
exports.DaAsianOption = promisify(rawApi.DaAsianOption);
exports.DividendVanillaOption = promisify(rawApi.DividendVanillaOption);
exports.ForwardVanillaOption = promisify(rawApi.ForwardVanillaOption);
exports.VanillaOption = promisify(rawApi.VanillaOption);
exports.EuropeanOption = promisify(rawApi.EuropeanOption);
exports.QuantoVanillaOption = promisify(rawApi.QuantoVanillaOption);
exports.QuantoForwardVanillaOption = promisify(rawApi.QuantoForwardVanillaOption);
exports.Delta = promisify(rawApi.Delta);
exports.DeltaForward = promisify(rawApi.DeltaForward);
exports.Elasticity = promisify(rawApi.Elasticity);
exports.Gamma = promisify(rawApi.Gamma);
exports.Theta = promisify(rawApi.Theta);
exports.ThetaPerDay = promisify(rawApi.ThetaPerDay);
exports.Vega = promisify(rawApi.Vega);
exports.Rho = promisify(rawApi.Rho);
exports.DividendRho = promisify(rawApi.DividendRho);
exports.ItmCashProbability = promisify(rawApi.ItmCashProbability);
exports.OvernightIndexedSwap = promisify(rawApi.OvernightIndexedSwap);
exports.MakeOIS = promisify(rawApi.MakeOIS);
exports.MakeDatedOIS = promisify(rawApi.MakeDatedOIS);
exports.OvernightIndexedSwapFromOISRateHelper = promisify(rawApi.OvernightIndexedSwapFromOISRateHelper);
exports.OvernightIndexedSwapFixedLegBPS = promisify(rawApi.OvernightIndexedSwapFixedLegBPS);
exports.OvernightIndexedSwapFixedLegNPV = promisify(rawApi.OvernightIndexedSwapFixedLegNPV);
exports.OvernightIndexedSwapFairRate = promisify(rawApi.OvernightIndexedSwapFairRate);
exports.OvernightIndexedSwapOvernightLegBPS = promisify(rawApi.OvernightIndexedSwapOvernightLegBPS);
exports.OvernightIndexedSwapOvernightLegNPV = promisify(rawApi.OvernightIndexedSwapOvernightLegNPV);
exports.OvernightIndexedSwapFairSpread = promisify(rawApi.OvernightIndexedSwapFairSpread);
exports.OvernightIndexedSwapType = promisify(rawApi.OvernightIndexedSwapType);
exports.OvernightIndexedSwapNominal = promisify(rawApi.OvernightIndexedSwapNominal);
exports.OvernightIndexedSwapFixedRate = promisify(rawApi.OvernightIndexedSwapFixedRate);
exports.OvernightIndexedSwapFixedDayCount = promisify(rawApi.OvernightIndexedSwapFixedDayCount);
exports.OvernightIndexedSwapSpread = promisify(rawApi.OvernightIndexedSwapSpread);
exports.OvernightIndexedSwapFixedLegAnalysis = promisify(rawApi.OvernightIndexedSwapFixedLegAnalysis);
exports.OvernightIndexedSwapOvernightLegAnalysis = promisify(rawApi.OvernightIndexedSwapOvernightLegAnalysis);
exports.StrikedTypePayoff = promisify(rawApi.StrikedTypePayoff);
exports.DoubleStickyRatchetPayoff = promisify(rawApi.DoubleStickyRatchetPayoff);
exports.RatchetPayoff = promisify(rawApi.RatchetPayoff);
exports.StickyPayoff = promisify(rawApi.StickyPayoff);
exports.RatchetMaxPayoff = promisify(rawApi.RatchetMaxPayoff);
exports.RatchetMinPayoff = promisify(rawApi.RatchetMinPayoff);
exports.StickyMaxPayoff = promisify(rawApi.StickyMaxPayoff);
exports.StickyMinPayoff = promisify(rawApi.StickyMinPayoff);
exports.PayoffName = promisify(rawApi.PayoffName);
exports.PayoffDescription = promisify(rawApi.PayoffDescription);
exports.PayoffValue = promisify(rawApi.PayoffValue);
exports.PayoffOptionType = promisify(rawApi.PayoffOptionType);
exports.PayoffStrike = promisify(rawApi.PayoffStrike);
exports.PayoffThirdParameter = promisify(rawApi.PayoffThirdParameter);
exports.PiecewiseYieldCurve = promisify(rawApi.PiecewiseYieldCurve);
exports.PiecewiseYieldCurveTimes = promisify(rawApi.PiecewiseYieldCurveTimes);
exports.PiecewiseYieldCurveDates = promisify(rawApi.PiecewiseYieldCurveDates);
exports.PiecewiseYieldCurveData = promisify(rawApi.PiecewiseYieldCurveData);
exports.PiecewiseYieldCurveJumpTimes = promisify(rawApi.PiecewiseYieldCurveJumpTimes);
exports.PiecewiseYieldCurveJumpDates = promisify(rawApi.PiecewiseYieldCurveJumpDates);
exports.MidEquivalent = promisify(rawApi.MidEquivalent);
exports.MidSafe = promisify(rawApi.MidSafe);
exports.BlackCalculator2 = promisify(rawApi.BlackCalculator2);
exports.BlackCalculator = promisify(rawApi.BlackCalculator);
exports.BlackScholesCalculator2 = promisify(rawApi.BlackScholesCalculator2);
exports.BlackScholesCalculator = promisify(rawApi.BlackScholesCalculator);
exports.PricingEngine = promisify(rawApi.PricingEngine);
exports.DiscountingSwapEngine = promisify(rawApi.DiscountingSwapEngine);
exports.BinomialPricingEngine = promisify(rawApi.BinomialPricingEngine);
exports.BlackSwaptionEngine = promisify(rawApi.BlackSwaptionEngine);
exports.BlackSwaptionEngine2 = promisify(rawApi.BlackSwaptionEngine2);
exports.BlackCapFloorEngine = promisify(rawApi.BlackCapFloorEngine);
exports.BlackCapFloorEngine2 = promisify(rawApi.BlackCapFloorEngine2);
exports.AnalyticCapFloorEngine = promisify(rawApi.AnalyticCapFloorEngine);
exports.BondEngine = promisify(rawApi.BondEngine);
exports.JamshidianSwaptionEngine = promisify(rawApi.JamshidianSwaptionEngine);
exports.TreeSwaptionEngine = promisify(rawApi.TreeSwaptionEngine);
exports.ModelG2SwaptionEngine = promisify(rawApi.ModelG2SwaptionEngine);
exports.BlackCalculatorValue = promisify(rawApi.BlackCalculatorValue);
exports.BlackCalculatorDeltaForward = promisify(rawApi.BlackCalculatorDeltaForward);
exports.BlackCalculatorDelta = promisify(rawApi.BlackCalculatorDelta);
exports.BlackCalculatorElasticityForward = promisify(rawApi.BlackCalculatorElasticityForward);
exports.BlackCalculatorElasticity = promisify(rawApi.BlackCalculatorElasticity);
exports.BlackCalculatorGammaForward = promisify(rawApi.BlackCalculatorGammaForward);
exports.BlackCalculatorGamma = promisify(rawApi.BlackCalculatorGamma);
exports.BlackCalculatorTheta = promisify(rawApi.BlackCalculatorTheta);
exports.BlackCalculatorThetaPerDay = promisify(rawApi.BlackCalculatorThetaPerDay);
exports.BlackCalculatorVega = promisify(rawApi.BlackCalculatorVega);
exports.BlackCalculatorRho = promisify(rawApi.BlackCalculatorRho);
exports.BlackCalculatorDividendRho = promisify(rawApi.BlackCalculatorDividendRho);
exports.BlackCalculatorItmCashProbability = promisify(rawApi.BlackCalculatorItmCashProbability);
exports.BlackCalculatorItmAssetProbability = promisify(rawApi.BlackCalculatorItmAssetProbability);
exports.BlackCalculatorStrikeSensitivity = promisify(rawApi.BlackCalculatorStrikeSensitivity);
exports.BlackCalculatorAlpha = promisify(rawApi.BlackCalculatorAlpha);
exports.BlackCalculatorBeta = promisify(rawApi.BlackCalculatorBeta);
exports.BlackScholesCalculatorDelta = promisify(rawApi.BlackScholesCalculatorDelta);
exports.BlackScholesCalculatorElasticity = promisify(rawApi.BlackScholesCalculatorElasticity);
exports.BlackScholesCalculatorGamma = promisify(rawApi.BlackScholesCalculatorGamma);
exports.BlackScholesCalculatorTheta = promisify(rawApi.BlackScholesCalculatorTheta);
exports.BlackScholesCalculatorThetaPerDay = promisify(rawApi.BlackScholesCalculatorThetaPerDay);
exports.BlackFormula = promisify(rawApi.BlackFormula);
exports.BlackFormulaCashItmProbability = promisify(rawApi.BlackFormulaCashItmProbability);
exports.BlackFormulaImpliedStdDevApproximation = promisify(rawApi.BlackFormulaImpliedStdDevApproximation);
exports.BlackFormulaImpliedStdDev = promisify(rawApi.BlackFormulaImpliedStdDev);
exports.BlackFormulaStdDevDerivative = promisify(rawApi.BlackFormulaStdDevDerivative);
exports.BachelierBlackFormula = promisify(rawApi.BachelierBlackFormula);
exports.BlackFormula2 = promisify(rawApi.BlackFormula2);
exports.BlackFormulaCashItmProbability2 = promisify(rawApi.BlackFormulaCashItmProbability2);
exports.BlackFormulaImpliedStdDevApproximation2 = promisify(rawApi.BlackFormulaImpliedStdDevApproximation2);
exports.BlackFormulaImpliedStdDev2 = promisify(rawApi.BlackFormulaImpliedStdDev2);
exports.BlackFormulaStdDevDerivative2 = promisify(rawApi.BlackFormulaStdDevDerivative2);
exports.BachelierBlackFormula2 = promisify(rawApi.BachelierBlackFormula2);
exports.GeneralizedBlackScholesProcess = promisify(rawApi.GeneralizedBlackScholesProcess);
exports.MarketModelMultiProductComposite = promisify(rawApi.MarketModelMultiProductComposite);
exports.MarketModelOneStepForwards = promisify(rawApi.MarketModelOneStepForwards);
exports.MarketModelMultiStepRatchet = promisify(rawApi.MarketModelMultiStepRatchet);
exports.MarketModelOneStepOptionlets = promisify(rawApi.MarketModelOneStepOptionlets);
exports.MarketModelMultiProductCompositeAdd = promisify(rawApi.MarketModelMultiProductCompositeAdd);
exports.MarketModelMultiProductCompositeFinalize = promisify(rawApi.MarketModelMultiProductCompositeFinalize);
exports.MarketModelMultiProductSuggestedNumeraires = promisify(rawApi.MarketModelMultiProductSuggestedNumeraires);
exports.MarketModelMultiProductPossibleCashFlowTimes = promisify(rawApi.MarketModelMultiProductPossibleCashFlowTimes);
exports.MarketModelMultiProductNumberOfProducts = promisify(rawApi.MarketModelMultiProductNumberOfProducts);
exports.MarketModelMultiProductMaxNumberOfCashFlowsPerProductPerStep = promisify(rawApi.MarketModelMultiProductMaxNumberOfCashFlowsPerProductPerStep);
exports.SimpleQuote = promisify(rawApi.SimpleQuote);
exports.ForwardValueQuote = promisify(rawApi.ForwardValueQuote);
exports.ForwardSwapQuote = promisify(rawApi.ForwardSwapQuote);
exports.ImpliedStdDevQuote = promisify(rawApi.ImpliedStdDevQuote);
exports.EurodollarFuturesImpliedStdDevQuote = promisify(rawApi.EurodollarFuturesImpliedStdDevQuote);
exports.CompositeQuote = promisify(rawApi.CompositeQuote);
exports.FuturesConvAdjustmentQuote = promisify(rawApi.FuturesConvAdjustmentQuote);
exports.LastFixingQuote = promisify(rawApi.LastFixingQuote);
exports.RelinkableHandleQuote = promisify(rawApi.RelinkableHandleQuote);
exports.QuoteValue = promisify(rawApi.QuoteValue);
exports.QuoteIsValid = promisify(rawApi.QuoteIsValid);
exports.SimpleQuoteReset = promisify(rawApi.SimpleQuoteReset);
exports.SimpleQuoteSetValue = promisify(rawApi.SimpleQuoteSetValue);
exports.SimpleQuoteSetTickValue = promisify(rawApi.SimpleQuoteSetTickValue);
exports.SimpleQuoteTickValue = promisify(rawApi.SimpleQuoteTickValue);
exports.FuturesConvAdjustmentQuoteVolatility = promisify(rawApi.FuturesConvAdjustmentQuoteVolatility);
exports.FuturesConvAdjustmentQuoteMeanReversion = promisify(rawApi.FuturesConvAdjustmentQuoteMeanReversion);
exports.FuturesConvAdjustmentQuoteImmDate = promisify(rawApi.FuturesConvAdjustmentQuoteImmDate);
exports.FuturesConvAdjustmentQuoteFuturesValue = promisify(rawApi.FuturesConvAdjustmentQuoteFuturesValue);
exports.LastFixingQuoteReferenceDate = promisify(rawApi.LastFixingQuoteReferenceDate);
exports.BucketAnalysis = promisify(rawApi.BucketAnalysis);
exports.BucketAnalysisDelta = promisify(rawApi.BucketAnalysisDelta);
exports.BucketAnalysisDelta2 = promisify(rawApi.BucketAnalysisDelta2);
exports.MersenneTwisterRsg = promisify(rawApi.MersenneTwisterRsg);
exports.FaureRsg = promisify(rawApi.FaureRsg);
exports.HaltonRsg = promisify(rawApi.HaltonRsg);
exports.SobolRsg = promisify(rawApi.SobolRsg);
exports.Variates = promisify(rawApi.Variates);
exports.Rand = promisify(rawApi.Rand);
exports.Randomize = promisify(rawApi.Randomize);
exports.RangeAccrualFloatersCoupon = promisify(rawApi.RangeAccrualFloatersCoupon);
exports.RangeAccrualFloatersCouponFromLeg = promisify(rawApi.RangeAccrualFloatersCouponFromLeg);
exports.RangeAccrualPricerByBgm = promisify(rawApi.RangeAccrualPricerByBgm);
exports.RangeAccrualFloatersCouponSetPricer = promisify(rawApi.RangeAccrualFloatersCouponSetPricer);
exports.RangeAccrualFloatersCouponObservationDates = promisify(rawApi.RangeAccrualFloatersCouponObservationDates);
exports.RangeAccrualFloatersCouponStarDate = promisify(rawApi.RangeAccrualFloatersCouponStarDate);
exports.RangeAccrualFloatersCouponEndDate = promisify(rawApi.RangeAccrualFloatersCouponEndDate);
exports.RangeAccrualFloatersCouponObservationsNo = promisify(rawApi.RangeAccrualFloatersCouponObservationsNo);
exports.RangeAccrualFloatersPrice = promisify(rawApi.RangeAccrualFloatersPrice);
exports.SimpleFloaterPrice = promisify(rawApi.SimpleFloaterPrice);
exports.DepositRateHelper = promisify(rawApi.DepositRateHelper);
exports.DepositRateHelper2 = promisify(rawApi.DepositRateHelper2);
exports.SwapRateHelper = promisify(rawApi.SwapRateHelper);
exports.SwapRateHelper2 = promisify(rawApi.SwapRateHelper2);
exports.OISRateHelper = promisify(rawApi.OISRateHelper);
exports.DatedOISRateHelper = promisify(rawApi.DatedOISRateHelper);
exports.FraRateHelper = promisify(rawApi.FraRateHelper);
exports.FraRateHelper2 = promisify(rawApi.FraRateHelper2);
exports.BondHelper = promisify(rawApi.BondHelper);
exports.FixedRateBondHelper = promisify(rawApi.FixedRateBondHelper);
exports.FuturesRateHelper = promisify(rawApi.FuturesRateHelper);
exports.FuturesRateHelper2 = promisify(rawApi.FuturesRateHelper2);
exports.FuturesRateHelper3 = promisify(rawApi.FuturesRateHelper3);
exports.FxSwapRateHelper = promisify(rawApi.FxSwapRateHelper);
exports.RateHelperEarliestDate = promisify(rawApi.RateHelperEarliestDate);
exports.RateHelperLatestRelevantDate = promisify(rawApi.RateHelperLatestRelevantDate);
exports.RateHelperPillarDate = promisify(rawApi.RateHelperPillarDate);
exports.RateHelperMaturityDate = promisify(rawApi.RateHelperMaturityDate);
exports.RateHelperQuoteName = promisify(rawApi.RateHelperQuoteName);
exports.RateHelperQuoteValue = promisify(rawApi.RateHelperQuoteValue);
exports.RateHelperQuoteIsValid = promisify(rawApi.RateHelperQuoteIsValid);
exports.RateHelperImpliedQuote = promisify(rawApi.RateHelperImpliedQuote);
exports.RateHelperQuoteError = promisify(rawApi.RateHelperQuoteError);
exports.SwapRateHelperSpread = promisify(rawApi.SwapRateHelperSpread);
exports.SwapRateHelperForwardStart = promisify(rawApi.SwapRateHelperForwardStart);
exports.FuturesRateHelperConvexityAdjustment = promisify(rawApi.FuturesRateHelperConvexityAdjustment);
exports.FxSwapRateHelperSpotValue = promisify(rawApi.FxSwapRateHelperSpotValue);
exports.FxSwapRateHelperTenor = promisify(rawApi.FxSwapRateHelperTenor);
exports.FxSwapRateHelperFixingDays = promisify(rawApi.FxSwapRateHelperFixingDays);
exports.FxSwapRateHelperCalendar = promisify(rawApi.FxSwapRateHelperCalendar);
exports.FxSwapRateHelperBDC = promisify(rawApi.FxSwapRateHelperBDC);
exports.FxSwapRateHelperEOM = promisify(rawApi.FxSwapRateHelperEOM);
exports.FxSwapRateHelperIsBaseCurrencyCollateralCurrency = promisify(rawApi.FxSwapRateHelperIsBaseCurrencyCollateralCurrency);
exports.RateHelperSelection = promisify(rawApi.RateHelperSelection);
exports.RateHelperRate = promisify(rawApi.RateHelperRate);
exports.Schedule = promisify(rawApi.Schedule);
exports.ScheduleFromDateVector = promisify(rawApi.ScheduleFromDateVector);
exports.ScheduleTruncated = promisify(rawApi.ScheduleTruncated);
exports.ScheduleSize = promisify(rawApi.ScheduleSize);
exports.SchedulePreviousDate = promisify(rawApi.SchedulePreviousDate);
exports.ScheduleNextDate = promisify(rawApi.ScheduleNextDate);
exports.ScheduleDates = promisify(rawApi.ScheduleDates);
exports.ScheduleIsRegular = promisify(rawApi.ScheduleIsRegular);
exports.ScheduleEmpty = promisify(rawApi.ScheduleEmpty);
exports.ScheduleCalendar = promisify(rawApi.ScheduleCalendar);
exports.ScheduleStartDate = promisify(rawApi.ScheduleStartDate);
exports.ScheduleEndDate = promisify(rawApi.ScheduleEndDate);
exports.ScheduleTenor = promisify(rawApi.ScheduleTenor);
exports.ScheduleBDC = promisify(rawApi.ScheduleBDC);
exports.ScheduleTerminationDateBDC = promisify(rawApi.ScheduleTerminationDateBDC);
exports.ScheduleRule = promisify(rawApi.ScheduleRule);
exports.ScheduleEndOfMonth = promisify(rawApi.ScheduleEndOfMonth);
exports.SequenceStatistics = promisify(rawApi.SequenceStatistics);
exports.SequenceStatistics2 = promisify(rawApi.SequenceStatistics2);
exports.SequenceStatisticsInc = promisify(rawApi.SequenceStatisticsInc);
exports.SequenceStatisticsInc2 = promisify(rawApi.SequenceStatisticsInc2);
exports.SequenceStatisticsSamples = promisify(rawApi.SequenceStatisticsSamples);
exports.SequenceStatisticsWeightSum = promisify(rawApi.SequenceStatisticsWeightSum);
exports.SequenceStatisticsMean = promisify(rawApi.SequenceStatisticsMean);
exports.SequenceStatisticsVariance = promisify(rawApi.SequenceStatisticsVariance);
exports.SequenceStatisticsStandardDeviation = promisify(rawApi.SequenceStatisticsStandardDeviation);
exports.SequenceStatisticsDownsideVariance = promisify(rawApi.SequenceStatisticsDownsideVariance);
exports.SequenceStatisticsDownsideDeviation = promisify(rawApi.SequenceStatisticsDownsideDeviation);
exports.SequenceStatisticsSemiVariance = promisify(rawApi.SequenceStatisticsSemiVariance);
exports.SequenceStatisticsSemiDeviation = promisify(rawApi.SequenceStatisticsSemiDeviation);
exports.SequenceStatisticsErrorEstimate = promisify(rawApi.SequenceStatisticsErrorEstimate);
exports.SequenceStatisticsSkewness = promisify(rawApi.SequenceStatisticsSkewness);
exports.SequenceStatisticsKurtosis = promisify(rawApi.SequenceStatisticsKurtosis);
exports.SequenceStatisticsMin = promisify(rawApi.SequenceStatisticsMin);
exports.SequenceStatisticsMax = promisify(rawApi.SequenceStatisticsMax);
exports.SequenceStatisticsGaussianPercentile = promisify(rawApi.SequenceStatisticsGaussianPercentile);
exports.SequenceStatisticsPercentile = promisify(rawApi.SequenceStatisticsPercentile);
exports.SequenceStatisticsGaussianPotentialUpside = promisify(rawApi.SequenceStatisticsGaussianPotentialUpside);
exports.SequenceStatisticsPotentialUpside = promisify(rawApi.SequenceStatisticsPotentialUpside);
exports.SequenceStatisticsGaussianValueAtRisk = promisify(rawApi.SequenceStatisticsGaussianValueAtRisk);
exports.SequenceStatisticsValueAtRisk = promisify(rawApi.SequenceStatisticsValueAtRisk);
exports.SequenceStatisticsRegret = promisify(rawApi.SequenceStatisticsRegret);
exports.SequenceStatisticsGaussianShortfall = promisify(rawApi.SequenceStatisticsGaussianShortfall);
exports.SequenceStatisticsShortfall = promisify(rawApi.SequenceStatisticsShortfall);
exports.SequenceStatisticsGaussianAverageShortfall = promisify(rawApi.SequenceStatisticsGaussianAverageShortfall);
exports.SequenceStatisticsAverageShortfall = promisify(rawApi.SequenceStatisticsAverageShortfall);
exports.SequenceStatisticsSize = promisify(rawApi.SequenceStatisticsSize);
exports.SequenceStatisticsCovariance = promisify(rawApi.SequenceStatisticsCovariance);
exports.SequenceStatisticsCorrelation = promisify(rawApi.SequenceStatisticsCorrelation);
exports.SettingsEvaluationDate = promisify(rawApi.SettingsEvaluationDate);
exports.SettingsSetEvaluationDate = promisify(rawApi.SettingsSetEvaluationDate);
exports.SettingsEnforceTodaysHistoricFixings = promisify(rawApi.SettingsEnforceTodaysHistoricFixings);
exports.SettingsSetEnforceTodaysHistoricFixings = promisify(rawApi.SettingsSetEnforceTodaysHistoricFixings);
exports.HullWhite = promisify(rawApi.HullWhite);
exports.Vasicek = promisify(rawApi.Vasicek);
exports.ModelG2 = promisify(rawApi.ModelG2);
exports.VasicekA = promisify(rawApi.VasicekA);
exports.VasicekB = promisify(rawApi.VasicekB);
exports.VasicekLambda = promisify(rawApi.VasicekLambda);
exports.VasicekSigma = promisify(rawApi.VasicekSigma);
exports.ModelG2A = promisify(rawApi.ModelG2A);
exports.ModelG2sigma = promisify(rawApi.ModelG2sigma);
exports.ModelG2B = promisify(rawApi.ModelG2B);
exports.ModelG2eta = promisify(rawApi.ModelG2eta);
exports.ModelG2rho = promisify(rawApi.ModelG2rho);
exports.FuturesConvexityBias = promisify(rawApi.FuturesConvexityBias);
exports.FlatSmileSection = promisify(rawApi.FlatSmileSection);
exports.SabrInterpolatedSmileSection = promisify(rawApi.SabrInterpolatedSmileSection);
exports.SabrInterpolatedSmileSection1 = promisify(rawApi.SabrInterpolatedSmileSection1);
exports.SabrSmileSection = promisify(rawApi.SabrSmileSection);
exports.InterpolatedSmileSection = promisify(rawApi.InterpolatedSmileSection);
exports.SmileSectionFromSabrVolSurface = promisify(rawApi.SmileSectionFromSabrVolSurface);
exports.SmileSectionVolatility = promisify(rawApi.SmileSectionVolatility);
exports.SmileSectionVariance = promisify(rawApi.SmileSectionVariance);
exports.SmileSectionAtmLevel = promisify(rawApi.SmileSectionAtmLevel);
exports.SmileSectionExerciseDate = promisify(rawApi.SmileSectionExerciseDate);
exports.SmileSectionDayCounter = promisify(rawApi.SmileSectionDayCounter);
exports.SabrInterpolatedSmileSectionAlpha = promisify(rawApi.SabrInterpolatedSmileSectionAlpha);
exports.SabrInterpolatedSmileSectionBeta = promisify(rawApi.SabrInterpolatedSmileSectionBeta);
exports.SabrInterpolatedSmileSectionNu = promisify(rawApi.SabrInterpolatedSmileSectionNu);
exports.SabrInterpolatedSmileSectionRho = promisify(rawApi.SabrInterpolatedSmileSectionRho);
exports.SabrInterpolatedSmileSectionError = promisify(rawApi.SabrInterpolatedSmileSectionError);
exports.SabrInterpolatedSmileSectionMaxError = promisify(rawApi.SabrInterpolatedSmileSectionMaxError);
exports.SabrInterpolatedSmileSectionEndCriteria = promisify(rawApi.SabrInterpolatedSmileSectionEndCriteria);
exports.Statistics = promisify(rawApi.Statistics);
exports.IncrementalStatistics = promisify(rawApi.IncrementalStatistics);
exports.StatisticsSamples = promisify(rawApi.StatisticsSamples);
exports.StatisticsWeightSum = promisify(rawApi.StatisticsWeightSum);
exports.StatisticsMean = promisify(rawApi.StatisticsMean);
exports.StatisticsVariance = promisify(rawApi.StatisticsVariance);
exports.StatisticsStandardDeviation = promisify(rawApi.StatisticsStandardDeviation);
exports.StatisticsErrorEstimate = promisify(rawApi.StatisticsErrorEstimate);
exports.StatisticsSkewness = promisify(rawApi.StatisticsSkewness);
exports.StatisticsKurtosis = promisify(rawApi.StatisticsKurtosis);
exports.StatisticsMin = promisify(rawApi.StatisticsMin);
exports.StatisticsMax = promisify(rawApi.StatisticsMax);
exports.StatisticsPercentile = promisify(rawApi.StatisticsPercentile);
exports.StatisticsTopPercentile = promisify(rawApi.StatisticsTopPercentile);
exports.StatisticsGaussianDownsideVariance = promisify(rawApi.StatisticsGaussianDownsideVariance);
exports.StatisticsGaussianDownsideDeviation = promisify(rawApi.StatisticsGaussianDownsideDeviation);
exports.StatisticsGaussianRegret = promisify(rawApi.StatisticsGaussianRegret);
exports.StatisticsGaussianPercentile = promisify(rawApi.StatisticsGaussianPercentile);
exports.StatisticsGaussianTopPercentile = promisify(rawApi.StatisticsGaussianTopPercentile);
exports.StatisticsGaussianPotentialUpside = promisify(rawApi.StatisticsGaussianPotentialUpside);
exports.StatisticsGaussianValueAtRisk = promisify(rawApi.StatisticsGaussianValueAtRisk);
exports.StatisticsGaussianExpectedShortfall = promisify(rawApi.StatisticsGaussianExpectedShortfall);
exports.StatisticsGaussianShortfall = promisify(rawApi.StatisticsGaussianShortfall);
exports.StatisticsGaussianAverageShortfall = promisify(rawApi.StatisticsGaussianAverageShortfall);
exports.StatisticsSemiVariance = promisify(rawApi.StatisticsSemiVariance);
exports.StatisticsSemiDeviation = promisify(rawApi.StatisticsSemiDeviation);
exports.StatisticsDownsideVariance = promisify(rawApi.StatisticsDownsideVariance);
exports.StatisticsDownsideDeviation = promisify(rawApi.StatisticsDownsideDeviation);
exports.StatisticsRegret = promisify(rawApi.StatisticsRegret);
exports.StatisticsPotentialUpside = promisify(rawApi.StatisticsPotentialUpside);
exports.StatisticsValueAtRisk = promisify(rawApi.StatisticsValueAtRisk);
exports.StatisticsExpectedShortfall = promisify(rawApi.StatisticsExpectedShortfall);
exports.StatisticsShortfall = promisify(rawApi.StatisticsShortfall);
exports.StatisticsAverageShortfall = promisify(rawApi.StatisticsAverageShortfall);
exports.GaussianDownsideVariance = promisify(rawApi.GaussianDownsideVariance);
exports.GaussianDownsideDeviation = promisify(rawApi.GaussianDownsideDeviation);
exports.GaussianRegret = promisify(rawApi.GaussianRegret);
exports.GaussianPercentile = promisify(rawApi.GaussianPercentile);
exports.GaussianTopPercentile = promisify(rawApi.GaussianTopPercentile);
exports.GaussianPotentialUpside = promisify(rawApi.GaussianPotentialUpside);
exports.GaussianValueAtRisk = promisify(rawApi.GaussianValueAtRisk);
exports.GaussianExpectedShortfall = promisify(rawApi.GaussianExpectedShortfall);
exports.GaussianShortfall = promisify(rawApi.GaussianShortfall);
exports.GaussianAverageShortfall = promisify(rawApi.GaussianAverageShortfall);
exports.Swap = promisify(rawApi.Swap);
exports.MakeCms = promisify(rawApi.MakeCms);
exports.SwapLegBPS = promisify(rawApi.SwapLegBPS);
exports.SwapLegNPV = promisify(rawApi.SwapLegNPV);
exports.SwapStartDate = promisify(rawApi.SwapStartDate);
exports.SwapMaturityDate = promisify(rawApi.SwapMaturityDate);
exports.SwapLegAnalysis = promisify(rawApi.SwapLegAnalysis);
exports.Swaption = promisify(rawApi.Swaption);
exports.MakeSwaption = promisify(rawApi.MakeSwaption);
exports.SwaptionType = promisify(rawApi.SwaptionType);
exports.SwaptionSettlementType = promisify(rawApi.SwaptionSettlementType);
exports.SwaptionImpliedVolatility = promisify(rawApi.SwaptionImpliedVolatility);
exports.RelinkableHandleSwaptionVolatilityStructure = promisify(rawApi.RelinkableHandleSwaptionVolatilityStructure);
exports.ConstantSwaptionVolatility = promisify(rawApi.ConstantSwaptionVolatility);
exports.SpreadedSwaptionVolatility = promisify(rawApi.SpreadedSwaptionVolatility);
exports.SwaptionVTSMatrix = promisify(rawApi.SwaptionVTSMatrix);
exports.SwaptionVolCube2 = promisify(rawApi.SwaptionVolCube2);
exports.SwaptionVolCube1 = promisify(rawApi.SwaptionVolCube1);
exports.SmileSectionByCube = promisify(rawApi.SmileSectionByCube);
exports.SmileSectionByCube2 = promisify(rawApi.SmileSectionByCube2);
exports.SwaptionVTSVolatility = promisify(rawApi.SwaptionVTSVolatility);
exports.SwaptionVTSVolatility2 = promisify(rawApi.SwaptionVTSVolatility2);
exports.SwaptionVTSBlackVariance = promisify(rawApi.SwaptionVTSBlackVariance);
exports.SwaptionVTSBlackVariance2 = promisify(rawApi.SwaptionVTSBlackVariance2);
exports.SwaptionVTSMaxSwapTenor = promisify(rawApi.SwaptionVTSMaxSwapTenor);
exports.SwaptionVTSBusinessDayConvention = promisify(rawApi.SwaptionVTSBusinessDayConvention);
exports.SwaptionVTSOptionDateFromTenor = promisify(rawApi.SwaptionVTSOptionDateFromTenor);
exports.SwaptionVTSSwapLength = promisify(rawApi.SwaptionVTSSwapLength);
exports.SwaptionVTSSwapLength2 = promisify(rawApi.SwaptionVTSSwapLength2);
exports.SwaptionVTSMatrixOptionDates = promisify(rawApi.SwaptionVTSMatrixOptionDates);
exports.SwaptionVTSMatrixOptionTenors = promisify(rawApi.SwaptionVTSMatrixOptionTenors);
exports.SwaptionVTSMatrixSwapTenors = promisify(rawApi.SwaptionVTSMatrixSwapTenors);
exports.SwaptionVTSMatrixLocate = promisify(rawApi.SwaptionVTSMatrixLocate);
exports.SwaptionVTSatmStrike = promisify(rawApi.SwaptionVTSatmStrike);
exports.SwaptionVTSatmStrike2 = promisify(rawApi.SwaptionVTSatmStrike2);
exports.SparseSabrParameters = promisify(rawApi.SparseSabrParameters);
exports.DenseSabrParameters = promisify(rawApi.DenseSabrParameters);
exports.MarketVolCube = promisify(rawApi.MarketVolCube);
exports.VolCubeAtmCalibrated = promisify(rawApi.VolCubeAtmCalibrated);
exports.RelinkableHandleYieldTermStructure = promisify(rawApi.RelinkableHandleYieldTermStructure);
exports.DiscountCurve = promisify(rawApi.DiscountCurve);
exports.ZeroCurve = promisify(rawApi.ZeroCurve);
exports.ForwardCurve = promisify(rawApi.ForwardCurve);
exports.FlatForward = promisify(rawApi.FlatForward);
exports.ForwardSpreadedTermStructure = promisify(rawApi.ForwardSpreadedTermStructure);
exports.ImpliedTermStructure = promisify(rawApi.ImpliedTermStructure);
exports.InterpolatedYieldCurve = promisify(rawApi.InterpolatedYieldCurve);
exports.TermStructureDayCounter = promisify(rawApi.TermStructureDayCounter);
exports.TermStructureMaxDate = promisify(rawApi.TermStructureMaxDate);
exports.TermStructureReferenceDate = promisify(rawApi.TermStructureReferenceDate);
exports.TermStructureTimeFromReference = promisify(rawApi.TermStructureTimeFromReference);
exports.TermStructureCalendar = promisify(rawApi.TermStructureCalendar);
exports.TermStructureSettlementDays = promisify(rawApi.TermStructureSettlementDays);
exports.YieldTSDiscount = promisify(rawApi.YieldTSDiscount);
exports.YieldTSForwardRate = promisify(rawApi.YieldTSForwardRate);
exports.YieldTSForwardRate2 = promisify(rawApi.YieldTSForwardRate2);
exports.YieldTSZeroRate = promisify(rawApi.YieldTSZeroRate);
exports.InterpolatedYieldCurveTimes = promisify(rawApi.InterpolatedYieldCurveTimes);
exports.InterpolatedYieldCurveDates = promisify(rawApi.InterpolatedYieldCurveDates);
exports.InterpolatedYieldCurveData = promisify(rawApi.InterpolatedYieldCurveData);
exports.InterpolatedYieldCurveJumpTimes = promisify(rawApi.InterpolatedYieldCurveJumpTimes);
exports.InterpolatedYieldCurveJumpDates = promisify(rawApi.InterpolatedYieldCurveJumpDates);
exports.TimeSeries = promisify(rawApi.TimeSeries);
exports.TimeSeriesFromIndex = promisify(rawApi.TimeSeriesFromIndex);
exports.TimeSeriesFirstDate = promisify(rawApi.TimeSeriesFirstDate);
exports.TimeSeriesLastDate = promisify(rawApi.TimeSeriesLastDate);
exports.TimeSeriesSize = promisify(rawApi.TimeSeriesSize);
exports.TimeSeriesEmpty = promisify(rawApi.TimeSeriesEmpty);
exports.TimeSeriesDates = promisify(rawApi.TimeSeriesDates);
exports.TimeSeriesValues = promisify(rawApi.TimeSeriesValues);
exports.TimeSeriesValue = promisify(rawApi.TimeSeriesValue);
exports.xlVersion = promisify(rawApi.xlVersion);
exports.AddinVersion = promisify(rawApi.AddinVersion);
exports.Version = promisify(rawApi.Version);
exports.FunctionCount = promisify(rawApi.FunctionCount);
exports.VanillaSwap = promisify(rawApi.VanillaSwap);
exports.MakeVanillaSwap = promisify(rawApi.MakeVanillaSwap);
exports.MakeIMMSwap = promisify(rawApi.MakeIMMSwap);
exports.VanillaSwapFromSwapIndex = promisify(rawApi.VanillaSwapFromSwapIndex);
exports.VanillaSwapFromSwapRateHelper = promisify(rawApi.VanillaSwapFromSwapRateHelper);
exports.VanillaSwapFixedLegBPS = promisify(rawApi.VanillaSwapFixedLegBPS);
exports.VanillaSwapFixedLegNPV = promisify(rawApi.VanillaSwapFixedLegNPV);
exports.VanillaSwapFairRate = promisify(rawApi.VanillaSwapFairRate);
exports.VanillaSwapFloatingLegBPS = promisify(rawApi.VanillaSwapFloatingLegBPS);
exports.VanillaSwapFloatingLegNPV = promisify(rawApi.VanillaSwapFloatingLegNPV);
exports.VanillaSwapFairSpread = promisify(rawApi.VanillaSwapFairSpread);
exports.VanillaSwapType = promisify(rawApi.VanillaSwapType);
exports.VanillaSwapNominal = promisify(rawApi.VanillaSwapNominal);
exports.VanillaSwapFixedRate = promisify(rawApi.VanillaSwapFixedRate);
exports.VanillaSwapFixedDayCount = promisify(rawApi.VanillaSwapFixedDayCount);
exports.VanillaSwapSpread = promisify(rawApi.VanillaSwapSpread);
exports.VanillaSwapFloatingDayCount = promisify(rawApi.VanillaSwapFloatingDayCount);
exports.VanillaSwapPaymentConvention = promisify(rawApi.VanillaSwapPaymentConvention);
exports.VanillaSwapFixedLegAnalysis = promisify(rawApi.VanillaSwapFixedLegAnalysis);
exports.VanillaSwapFloatingLegAnalysis = promisify(rawApi.VanillaSwapFloatingLegAnalysis);
exports.BlackConstantVol = promisify(rawApi.BlackConstantVol);
exports.BlackVarianceSurface = promisify(rawApi.BlackVarianceSurface);
exports.AbcdAtmVolCurve = promisify(rawApi.AbcdAtmVolCurve);
exports.SabrVolSurface = promisify(rawApi.SabrVolSurface);
exports.VolatilityTermStructureBusinessDayConvention = promisify(rawApi.VolatilityTermStructureBusinessDayConvention);
exports.VolatilityTermStructureOptionDateFromTenor = promisify(rawApi.VolatilityTermStructureOptionDateFromTenor);
exports.VolatilityTermStructureMinStrike = promisify(rawApi.VolatilityTermStructureMinStrike);
exports.VolatilityTermStructureMaxStrike = promisify(rawApi.VolatilityTermStructureMaxStrike);
exports.BlackAtmVolCurveAtmVol = promisify(rawApi.BlackAtmVolCurveAtmVol);
exports.BlackAtmVolCurveAtmVol2 = promisify(rawApi.BlackAtmVolCurveAtmVol2);
exports.BlackAtmVolCurveAtmVol3 = promisify(rawApi.BlackAtmVolCurveAtmVol3);
exports.BlackAtmVolCurveAtmVariance = promisify(rawApi.BlackAtmVolCurveAtmVariance);
exports.BlackAtmVolCurveAtmVariance2 = promisify(rawApi.BlackAtmVolCurveAtmVariance2);
exports.BlackAtmVolCurveAtmVariance3 = promisify(rawApi.BlackAtmVolCurveAtmVariance3);
exports.BlackVolTermStructureBlackVol = promisify(rawApi.BlackVolTermStructureBlackVol);
exports.BlackVolTermStructureBlackVariance = promisify(rawApi.BlackVolTermStructureBlackVariance);
exports.BlackVolTermStructureBlackForwardVol = promisify(rawApi.BlackVolTermStructureBlackForwardVol);
exports.BlackVolTermStructureBlackForwardVariance = promisify(rawApi.BlackVolTermStructureBlackForwardVariance);
exports.AbcdAtmVolCurveOptionTenors = promisify(rawApi.AbcdAtmVolCurveOptionTenors);
exports.AbcdAtmVolCurveOptionTenorsInInterpolation = promisify(rawApi.AbcdAtmVolCurveOptionTenorsInInterpolation);
exports.AbcdAtmVolCurveOptionDates = promisify(rawApi.AbcdAtmVolCurveOptionDates);
exports.AbcdAtmVolCurveOptionTimes = promisify(rawApi.AbcdAtmVolCurveOptionTimes);
exports.AbcdAtmVolCurveRmsError = promisify(rawApi.AbcdAtmVolCurveRmsError);
exports.AbcdAtmVolCurveMaxError = promisify(rawApi.AbcdAtmVolCurveMaxError);
exports.AbcdAtmVolCurveA = promisify(rawApi.AbcdAtmVolCurveA);
exports.AbcdAtmVolCurveB = promisify(rawApi.AbcdAtmVolCurveB);
exports.AbcdAtmVolCurveC = promisify(rawApi.AbcdAtmVolCurveC);
exports.AbcdAtmVolCurveD = promisify(rawApi.AbcdAtmVolCurveD);
exports.AbcdAtmVolCurveKatOptionTenors = promisify(rawApi.AbcdAtmVolCurveKatOptionTenors);
exports.AbcdAtmVolCurveK = promisify(rawApi.AbcdAtmVolCurveK);
exports.VolatilitySpreads = promisify(rawApi.VolatilitySpreads);
exports.VolatilitySpreads2 = promisify(rawApi.VolatilitySpreads2);
exports.AtmCurve = promisify(rawApi.AtmCurve);
exports.SabrVolatility = promisify(rawApi.SabrVolatility);
exports.PiecewiseConstantAbcdVariance = promisify(rawApi.PiecewiseConstantAbcdVariance);
exports.MarketModelLmExtLinearExponentialVolModel = promisify(rawApi.MarketModelLmExtLinearExponentialVolModel);
exports.PiecewiseConstantVarianceVariances = promisify(rawApi.PiecewiseConstantVarianceVariances);
exports.PiecewiseConstantVarianceVolatilities = promisify(rawApi.PiecewiseConstantVarianceVolatilities);
exports.PiecewiseConstantVarianceRateTimes = promisify(rawApi.PiecewiseConstantVarianceRateTimes);
exports.PiecewiseConstantVarianceVariance = promisify(rawApi.PiecewiseConstantVarianceVariance);
exports.PiecewiseConstantVarianceVolatility = promisify(rawApi.PiecewiseConstantVarianceVolatility);
exports.PiecewiseConstantVarianceTotalVariance = promisify(rawApi.PiecewiseConstantVarianceTotalVariance);
exports.PiecewiseConstantVarianceTotalVolatility = promisify(rawApi.PiecewiseConstantVarianceTotalVolatility);

exports.PiecewiseYieldCurveMixedInterpolation = promisify(PiecewiseYieldCurveMixedInterpolation);
exports.BachelierCapFloorEngine = promisify(BachelierCapFloorEngine);
exports.BachelierCapFloorEngine2 = promisify(BachelierCapFloorEngine2);
exports.BachelierBlackFormulaImpliedVol = promisify(BachelierBlackFormulaImpliedVol);

exports.ObjectPropertyNames = promisify(rawApi.ObjectPropertyNames);
exports.DeleteObject = promisify(rawApi.DeleteObject);
exports.DeleteObjects = promisify(rawApi.DeleteObjects);
exports.DeleteAllObjects = promisify(rawApi.DeleteAllObjects);
exports.ListObjectIDs = promisify(rawApi.ListObjectIDs);

exports.__proto__ = rawApi;

promisify(exports);

// Expose Promise implementation.
exports.Promise = Promise;
